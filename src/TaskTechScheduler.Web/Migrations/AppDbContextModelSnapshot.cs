// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

#nullable disable

namespace TaskTechScheduler.Web.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("Models.Tasks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AcceptedUserAdminId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CompletedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("isCompleted")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AcceptedUserAdminId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Models.UserAdmins", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "John@mail.ru",
                            FirstName = "John",
                            LastName = "White",
                            Password = "1",
                            Role = 0
                        },
                        new
                        {
                            Id = 2,
                            Email = "Ben@mail.ru",
                            FirstName = "Ben",
                            LastName = "Brown",
                            Password = "2",
                            Role = 1
                        },
                        new
                        {
                            Id = 3,
                            Email = "Tom@mail.ru",
                            FirstName = "Tom",
                            LastName = "Red",
                            Password = "3",
                            Role = 1
                        },
                        new
                        {
                            Id = 4,
                            Email = "Mick@mail.ru",
                            FirstName = "Mick",
                            LastName = "Blue",
                            Password = "4",
                            Role = 1
                        });
                });

            modelBuilder.Entity("Models.Tasks", b =>
                {
                    b.HasOne("Models.UserAdmins", "TechAdmin")
                        .WithMany("Tasks")
                        .HasForeignKey("AcceptedUserAdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TechAdmin");
                });

            modelBuilder.Entity("Models.UserAdmins", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
